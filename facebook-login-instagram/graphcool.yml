types: types.graphql

permissions:

### Type permissions

# a user can read her own data (all fields)
- operation: User.read
  authenticated: true
  query: permissions/dataQueries.graphql:isSameUser

# everyone can read the name of a user
- operation: User.read
  fields: [name]

# moderators can activate users
- operation: User.update
  fields: [isActivated]
  query: permissions/roleQueries.graphql:isModerator

# admins can activate users and change their name
- operation: User.update
  fields: [isActivated, name]
  query: permissions/roleQueries.graphql:isAdmin

# everyone can read posts (all fields)
- operation: Post.read

# activated users can create posts (only title)
- operation: Post.create
  authenticated: true
  fields: [title]
  query: permissions/dataQueries.graphql:UserIsActivated

# a user can update the title of her posts (but not the slug)
- operation: Post.update
  authenticated: true
  fields: [title]
  query: permissions/dataQueries.graphql:wasCreatedByUser

# everyone can read a comment (all fields)
- operation: Comment.read

# authenticated users can create comments to posts of their friends
- operation: Comment.create
  authenticated: true
  query: permissions/dataQueries.graphql:CommentAuthorIsActivatedAndFriendOfPostAuthor


### Relation Permissions

# user can connect new posts to herself
- operation: PostAuthor.connect
  authenticated: true
  query: permissions/dataQueries.graphql:connectPostToSelf

# user can connect new comments to herself
- operation: CommentAuthor.connect
  authenticated: true
  query: permissions/dataQueries.graphql:connectCommentToSelf

# user can connect her own, new comments to posts
- operation: PostComments.connect
  authenticated: true
  query: permissions/dataQueries.graphql:connectCommentToPost

# user can befriend another user
- operation: Friends.connect
  authenticated: true
  query: permissions/dataQueries.graphql:connectFriends

functions:

  # Facebook Login
  facebookLogin:
    handler: functions/authenticateFacebookUser.js
    type:
      schemaExtension: functions/authenticateFacebookUser.graphql

  # Generate slug for post title
  generatePostSlugOnCreate:
    handler: functions/generateSlug.js
    type:
      operationBefore: Post.create

  generatePostSlugOnUpdate:
      handler: functions/generateSlug.js
      type:
        operationBefore: Post.update