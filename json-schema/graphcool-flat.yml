# this is a modification based on Marcus' suggestion to flatten the function properties

types: ./types.graphql

rootTokens:
  - crm
  - someOther

permissions:

  # user must be authenticated and someQuery.graphql must return true so User.create 
  # can be performed (restriced to field `someOther` during creation)
  - operation: User.create
    authenticated: true
    query: someQuery.graphql
    fields: [id, someOther]

  # everyone can delete User nodes
  - operation: User.delete
  
  # everyone can perform all operations on Post nodes
  - operation: Post.*

functions:

  # this is a user signup
  fnHttpRequest:
    isEnabled: true
    handler:
      webhook:
        url: http://
        headers:
          Content-Type: application/json
    type: httpRequest
    # type: httpResponse
    
  fnHttpResponse:
    handler: 
      code:
        src: myfn.js
    type: httpResponse

  fnOperationBefore:
    handler:
      webhook: http://
    type: operationBefore
    operation: User.create

  fnOperationAfter:
    handler:
      webhook: http://
    type: operationAfter
    operation: UserComments.disconnect

  fnSubscriptionInline:
    handler:
      webhook: http://
    type: subscription
    query: |
      subscription {
        Post {
          node {
            title
          }
        }
      }

  fnSubscriptionFile:
    handler:
      webhook: http://
    type: subscription
    query: some-subscription.graphql

  fnSchemaExtension:
    handler:
      webhook: http://
    type: schemaExtension
    schema: my-extension.graphql
